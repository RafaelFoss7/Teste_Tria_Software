// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste_Tria_Software.Models;

namespace Teste_Tria_Software.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210630005533_INICIAL")]
    partial class INICIAL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Teste_Tria_Software.Models.Cliente", b =>
                {
                    b.Property<long>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DATA_CRIACAO")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Teste_Tria_Software.Models.ClienteEmpresa", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClienteID")
                        .HasColumnType("bigint");

                    b.Property<long>("EmpresaID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("ClienteEmpresas");
                });

            modelBuilder.Entity("Teste_Tria_Software.Models.Empresa", b =>
                {
                    b.Property<long>("EmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("RAZAO_SOCIAL")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("EmpresaID");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Teste_Tria_Software.Models.ClienteEmpresa", b =>
                {
                    b.HasOne("Teste_Tria_Software.Models.Cliente", "Cliente")
                        .WithMany("ClienteEmpresa")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste_Tria_Software.Models.Empresa", "Empresa")
                        .WithMany("ClienteEmpresa")
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Teste_Tria_Software.Models.Cliente", b =>
                {
                    b.Navigation("ClienteEmpresa");
                });

            modelBuilder.Entity("Teste_Tria_Software.Models.Empresa", b =>
                {
                    b.Navigation("ClienteEmpresa");
                });
#pragma warning restore 612, 618
        }
    }
}
